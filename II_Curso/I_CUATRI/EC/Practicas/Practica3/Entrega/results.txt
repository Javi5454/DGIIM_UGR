


__OPTIM0__================================================

__TEST01__------------------------------------------------
resultado = 4	popcount1 (lenguaje C - for):        1 us 
resultado = 4	popcount2 (lenguaje C - while):        0 us 
resultado = 4	popcount3 (leng.ASM-body - while 4i):        0 us 
resultado = 4	popcount4 (leng.ASM-body - while 3i):        0 us 
resultado = 4	popcount5 (CS:APP2e 3.49-group 8b):        0 us 
resultado = 4	popcount6 (Wikipedia- naive - 32b):        0 us 
resultado = 4	popcount7 (Wikipedia- naive - 128b):        0 us 
resultado = 4	popcount8 (asm SSE3 - pshufb 128b):        0 us 
resultado = 4	popcount9 (asm SSE4- popcount 32b):        0 us 
resultado = 4	popcount10 (asm SSE4- popcount128b):        0 us 
calculado = 4

__TEST02__------------------------------------------------
resultado = 156	popcount1 (lenguaje C - for):        1 us 
resultado = 156	popcount2 (lenguaje C - while):        1 us 
resultado = 156	popcount3 (leng.ASM-body - while 4i):        1 us 
resultado = 156	popcount4 (leng.ASM-body - while 3i):        0 us 
resultado = 156	popcount5 (CS:APP2e 3.49-group 8b):        0 us 
resultado = 156	popcount6 (Wikipedia- naive - 32b):        0 us 
resultado = 156	popcount7 (Wikipedia- naive - 128b):        0 us 
resultado = 156	popcount8 (asm SSE3 - pshufb 128b):        0 us 
resultado = 156	popcount9 (asm SSE4- popcount 32b):        0 us 
resultado = 156	popcount10 (asm SSE4- popcount128b):        0 us 
calculado = 156

__TEST03__------------------------------------------------
resultado = 116	popcount1 (lenguaje C - for):        5 us 
resultado = 116	popcount2 (lenguaje C - while):        3 us 
resultado = 116	popcount3 (leng.ASM-body - while 4i):        1 us 
resultado = 116	popcount4 (leng.ASM-body - while 3i):        2 us 
resultado = 116	popcount5 (CS:APP2e 3.49-group 8b):        2 us 
resultado = 116	popcount6 (Wikipedia- naive - 32b):        1 us 
resultado = 116	popcount7 (Wikipedia- naive - 128b):        0 us 
resultado = 116	popcount8 (asm SSE3 - pshufb 128b):        1 us 
resultado = 116	popcount9 (asm SSE4- popcount 32b):        1 us 
resultado = 116	popcount10 (asm SSE4- popcount128b):        1 us 
calculado = 116

__TEST04__------------------------------------------------
resultado = 10485760	popcount1 (lenguaje C - for):   144181 us 
resultado = 10485760	popcount2 (lenguaje C - while):    38212 us 
resultado = 10485760	popcount3 (leng.ASM-body - while 4i):    10908 us 
resultado = 10485760	popcount4 (leng.ASM-body - while 3i):    10064 us 
resultado = 10485760	popcount5 (CS:APP2e 3.49-group 8b):    19428 us 
resultado = 10485760	popcount6 (Wikipedia- naive - 32b):     6361 us 
resultado = 10485760	popcount7 (Wikipedia- naive - 128b):     5689 us 
resultado = 10485760	popcount8 (asm SSE3 - pshufb 128b):      735 us 
resultado = 10485760	popcount9 (asm SSE4- popcount 32b):     2879 us 
resultado = 10485760	popcount10 (asm SSE4- popcount128b):     1592 us 
calculado = 10485760



__OPTIMg__================================================

__TEST01__------------------------------------------------
resultado = 4	popcount1 (lenguaje C - for):        0 us 
resultado = 4	popcount2 (lenguaje C - while):        0 us 
resultado = 4	popcount3 (leng.ASM-body - while 4i):        0 us 
resultado = 4	popcount4 (leng.ASM-body - while 3i):        0 us 
resultado = 4	popcount5 (CS:APP2e 3.49-group 8b):        1 us 
resultado = 4	popcount6 (Wikipedia- naive - 32b):        0 us 
resultado = 4	popcount7 (Wikipedia- naive - 128b):        0 us 
resultado = 4	popcount8 (asm SSE3 - pshufb 128b):        0 us 
resultado = 4	popcount9 (asm SSE4- popcount 32b):        1 us 
resultado = 4	popcount10 (asm SSE4- popcount128b):        0 us 
calculado = 4

__TEST02__------------------------------------------------
resultado = 156	popcount1 (lenguaje C - for):        0 us 
resultado = 156	popcount2 (lenguaje C - while):        1 us 
resultado = 156	popcount3 (leng.ASM-body - while 4i):        0 us 
resultado = 156	popcount4 (leng.ASM-body - while 3i):        1 us 
resultado = 156	popcount5 (CS:APP2e 3.49-group 8b):        0 us 
resultado = 156	popcount6 (Wikipedia- naive - 32b):        0 us 
resultado = 156	popcount7 (Wikipedia- naive - 128b):        0 us 
resultado = 156	popcount8 (asm SSE3 - pshufb 128b):        0 us 
resultado = 156	popcount9 (asm SSE4- popcount 32b):        0 us 
resultado = 156	popcount10 (asm SSE4- popcount128b):        0 us 
calculado = 156

__TEST03__------------------------------------------------
resultado = 116	popcount1 (lenguaje C - for):        1 us 
resultado = 116	popcount2 (lenguaje C - while):        1 us 
resultado = 116	popcount3 (leng.ASM-body - while 4i):        1 us 
resultado = 116	popcount4 (leng.ASM-body - while 3i):        0 us 
resultado = 116	popcount5 (CS:APP2e 3.49-group 8b):        1 us 
resultado = 116	popcount6 (Wikipedia- naive - 32b):        0 us 
resultado = 116	popcount7 (Wikipedia- naive - 128b):        0 us 
resultado = 116	popcount8 (asm SSE3 - pshufb 128b):        0 us 
resultado = 116	popcount9 (asm SSE4- popcount 32b):        0 us 
resultado = 116	popcount10 (asm SSE4- popcount128b):        0 us 
calculado = 116

__TEST04__------------------------------------------------
resultado = 10485760	popcount1 (lenguaje C - for):    38055 us 
resultado = 10485760	popcount2 (lenguaje C - while):     8365 us 
resultado = 10485760	popcount3 (leng.ASM-body - while 4i):    10026 us 
resultado = 10485760	popcount4 (leng.ASM-body - while 3i):    11470 us 
resultado = 10485760	popcount5 (CS:APP2e 3.49-group 8b):     5696 us 
resultado = 10485760	popcount6 (Wikipedia- naive - 32b):     2474 us 
resultado = 10485760	popcount7 (Wikipedia- naive - 128b):     2088 us 
resultado = 10485760	popcount8 (asm SSE3 - pshufb 128b):      470 us 
resultado = 10485760	popcount9 (asm SSE4- popcount 32b):      423 us 
resultado = 10485760	popcount10 (asm SSE4- popcount128b):      540 us 
calculado = 10485760



__OPTIM1__================================================

__TEST01__------------------------------------------------
resultado = 4	popcount1 (lenguaje C - for):        0 us 
resultado = 4	popcount2 (lenguaje C - while):        0 us 
resultado = 4	popcount3 (leng.ASM-body - while 4i):        0 us 
resultado = 4	popcount4 (leng.ASM-body - while 3i):        0 us 
resultado = 4	popcount5 (CS:APP2e 3.49-group 8b):        1 us 
resultado = 4	popcount6 (Wikipedia- naive - 32b):        0 us 
resultado = 4	popcount7 (Wikipedia- naive - 128b):        0 us 
resultado = 4	popcount8 (asm SSE3 - pshufb 128b):        0 us 
resultado = 4	popcount9 (asm SSE4- popcount 32b):        1 us 
resultado = 4	popcount10 (asm SSE4- popcount128b):        0 us 
calculado = 4

__TEST02__------------------------------------------------
resultado = 156	popcount1 (lenguaje C - for):        0 us 
resultado = 156	popcount2 (lenguaje C - while):        0 us 
resultado = 156	popcount3 (leng.ASM-body - while 4i):        0 us 
resultado = 156	popcount4 (leng.ASM-body - while 3i):        0 us 
resultado = 156	popcount5 (CS:APP2e 3.49-group 8b):        0 us 
resultado = 156	popcount6 (Wikipedia- naive - 32b):        0 us 
resultado = 156	popcount7 (Wikipedia- naive - 128b):        0 us 
resultado = 156	popcount8 (asm SSE3 - pshufb 128b):        0 us 
resultado = 156	popcount9 (asm SSE4- popcount 32b):        0 us 
resultado = 156	popcount10 (asm SSE4- popcount128b):        0 us 
calculado = 156

__TEST03__------------------------------------------------
resultado = 116	popcount1 (lenguaje C - for):        1 us 
resultado = 116	popcount2 (lenguaje C - while):        1 us 
resultado = 116	popcount3 (leng.ASM-body - while 4i):        0 us 
resultado = 116	popcount4 (leng.ASM-body - while 3i):        0 us 
resultado = 116	popcount5 (CS:APP2e 3.49-group 8b):        0 us 
resultado = 116	popcount6 (Wikipedia- naive - 32b):        1 us 
resultado = 116	popcount7 (Wikipedia- naive - 128b):        0 us 
resultado = 116	popcount8 (asm SSE3 - pshufb 128b):        0 us 
resultado = 116	popcount9 (asm SSE4- popcount 32b):        0 us 
resultado = 116	popcount10 (asm SSE4- popcount128b):        1 us 
calculado = 116

__TEST04__------------------------------------------------
resultado = 10485760	popcount1 (lenguaje C - for):    25041 us 
resultado = 10485760	popcount2 (lenguaje C - while):     7715 us 
resultado = 10485760	popcount3 (leng.ASM-body - while 4i):    10892 us 
resultado = 10485760	popcount4 (leng.ASM-body - while 3i):     9031 us 
resultado = 10485760	popcount5 (CS:APP2e 3.49-group 8b):     4021 us 
resultado = 10485760	popcount6 (Wikipedia- naive - 32b):     3094 us 
resultado = 10485760	popcount7 (Wikipedia- naive - 128b):     2337 us 
resultado = 10485760	popcount8 (asm SSE3 - pshufb 128b):      426 us 
resultado = 10485760	popcount9 (asm SSE4- popcount 32b):      475 us 
resultado = 10485760	popcount10 (asm SSE4- popcount128b):      567 us 
calculado = 10485760



__OPTIM2__================================================

__TEST01__------------------------------------------------
resultado = 4	popcount1 (lenguaje C - for):        0 us 
resultado = 4	popcount2 (lenguaje C - while):        0 us 
resultado = 4	popcount3 (leng.ASM-body - while 4i):        0 us 
resultado = 4	popcount4 (leng.ASM-body - while 3i):        0 us 
resultado = 4	popcount5 (CS:APP2e 3.49-group 8b):        0 us 
resultado = 4	popcount6 (Wikipedia- naive - 32b):        0 us 
resultado = 4	popcount7 (Wikipedia- naive - 128b):        0 us 
resultado = 4	popcount8 (asm SSE3 - pshufb 128b):        0 us 
resultado = 4	popcount9 (asm SSE4- popcount 32b):        0 us 
resultado = 4	popcount10 (asm SSE4- popcount128b):        0 us 
calculado = 4

__TEST02__------------------------------------------------
resultado = 156	popcount1 (lenguaje C - for):        0 us 
resultado = 156	popcount2 (lenguaje C - while):        0 us 
resultado = 156	popcount3 (leng.ASM-body - while 4i):        0 us 
resultado = 156	popcount4 (leng.ASM-body - while 3i):        0 us 
resultado = 156	popcount5 (CS:APP2e 3.49-group 8b):        0 us 
resultado = 156	popcount6 (Wikipedia- naive - 32b):        0 us 
resultado = 156	popcount7 (Wikipedia- naive - 128b):        0 us 
resultado = 156	popcount8 (asm SSE3 - pshufb 128b):        0 us 
resultado = 156	popcount9 (asm SSE4- popcount 32b):        0 us 
resultado = 156	popcount10 (asm SSE4- popcount128b):        0 us 
calculado = 156

__TEST03__------------------------------------------------
resultado = 116	popcount1 (lenguaje C - for):        1 us 
resultado = 116	popcount2 (lenguaje C - while):        1 us 
resultado = 116	popcount3 (leng.ASM-body - while 4i):        0 us 
resultado = 116	popcount4 (leng.ASM-body - while 3i):        0 us 
resultado = 116	popcount5 (CS:APP2e 3.49-group 8b):        0 us 
resultado = 116	popcount6 (Wikipedia- naive - 32b):        0 us 
resultado = 116	popcount7 (Wikipedia- naive - 128b):        0 us 
resultado = 116	popcount8 (asm SSE3 - pshufb 128b):        0 us 
resultado = 116	popcount9 (asm SSE4- popcount 32b):        0 us 
resultado = 116	popcount10 (asm SSE4- popcount128b):        1 us 
calculado = 116

__TEST04__------------------------------------------------
resultado = 10485760	popcount1 (lenguaje C - for):    24426 us 
resultado = 10485760	popcount2 (lenguaje C - while):     8010 us 
resultado = 10485760	popcount3 (leng.ASM-body - while 4i):     9384 us 
resultado = 10485760	popcount4 (leng.ASM-body - while 3i):     9673 us 
resultado = 10485760	popcount5 (CS:APP2e 3.49-group 8b):     5362 us 
resultado = 10485760	popcount6 (Wikipedia- naive - 32b):     2059 us 
resultado = 10485760	popcount7 (Wikipedia- naive - 128b):     2613 us 
resultado = 10485760	popcount8 (asm SSE3 - pshufb 128b):      700 us 
resultado = 10485760	popcount9 (asm SSE4- popcount 32b):      532 us 
resultado = 10485760	popcount10 (asm SSE4- popcount128b):      600 us 
calculado = 10485760

__OPTIM0__================================================


2021-11-09 11:02                                                          Page 1


0      1      2	     3	    4	   5	  6	 7	8      9      10
144613 145308 152130 146932 146596 146664 146615 153080 147665 146321 146312
39953  43053  46200  45339  39697  38292  38080	 46671	43953  37939  40537
10501  11174  11135  11785  11994  12787  11144	 11307	11616  11259  11759
10507  10992  11470  11023  10549  11268  11787	 11997	10634  9629   12306
18694  19851  21579  18766  22813  19415  21233	 19592	18483  19212  19246
6771   8345   8347   7190   7306   7598	  7005	 6908	7537   7566   6869
6010   6474   5823   5964   6081   6480	  7259	 5621	5654   5632   5443
754    723    810    803    688	   668	  1677	 713	698    742    919
2302   2453   2378   2535   2632   2307	  2489	 2365	2265   2502   2525
1460   1524   1935   1503   1581   2130	  1425	 1485	1695   1794   1853







__OPTIMg__================================================


2021-11-09 11:02                                                          Page 1


0      1      2	     3	    4	   5	  6	 7	8      9      10
29880  30408  32421  30444  30336  30869  30941	 30921	32863  29890  31159
7631   7763   9380   9540   7858   8664	  8215	 9956	10957  8250   7476
12191  10501  9500   10039  10407  9981	  9877	 10887	10099  9511   10217
13039  12494  13176  12492  11683  13090  12449	 11681	15848  12333  11379
6869   5574   5409   4696   5112   4982	  4664	 5157	5531   4794   5284
2501   2334   2432   2527   2344   3281	  2416	 2250	3060   2340   3468
2678   2229   3925   2475   2218   2203	  2861	 2224	2811   2853   5193
428    513    967    425    367	   430	  415	 405	406    755    1214
558    440    1165   499    428	   555	  491	 444	424    734    1161
606    598    884    627    610	   885	  570	 573	609    728    795







__OPTIM1__================================================


2021-11-09 11:02                                                          Page 1


0      1      2	     3	    4	   5	  6	 7	8      9      10
24979  28936  27485  24527  24607  25453  24762	 24644	25047  25008  24525
7632   7400   8338   7819   8293   8649	  7363	 11682	8778   8538   7627
11044  10296  11680  9374   9336   9617	  10141	 12079	9316   9701   9496
8873   9153   9874   9476   9502   9475	  9756	 11038	9585   11555  9736
5004   4713   5829   5324   4404   4100	  4174	 4781	4090   4143   3840
2495   2334   2352   4335   2333   2302	  2282	 2267	2359   2306   2788
2184   2115   2113   2036   2488   2434	  2158	 2211	2498   3188   2581
400    367    388    422    423	   455	  391	 765	715    586    911
422    415    399    625    465	   439	  419	 932	778    687    621
571    569    540    585    550	   567	  556	 923	727    703    601







__OPTIM2__================================================


2021-11-09 11:02                                                          Page 1


0      1      2	     3	    4	   5	  6	 7	8      9      10
26279  24850  23679  31674  24557  25359  25548	 24387	24217  24563  29986
7361   8166   7861   7791   10275  7327	  7654	 7618	7888   7964   9856
10442  12429  10374  9779   10717  10106  10087	 10149	9806   9069   10263
9028   11438  9439   9276   9105   9142	  9275	 9567	8996   9887   8590
5627   6242   4963   4833   5788   5371	  5803	 5241	5008   4963   5521
2134   3888   2253   2501   2415   2124	  2090	 2238	2432   1967   2081
2103   3927   1938   2435   2122   2546	  2657	 2362	2327   2780   2002
426    830    360    453    415	   441	  414	 432	461    427    387
426    909    413    490    431	   423	  448	 481	468    587    413
580    751    614    576    569	   589	  575	 578	595    846    559






